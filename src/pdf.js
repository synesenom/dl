/**
 * A PDF writer.
 */
var PDF = function(boundingBox) {
    DocumentWriter.apply(this, arguments);

    this.bbox = boundingBox;
    this._doc.header = "%PDF-1.4";
    this._doc.footer = "%%EOF";
};
PDF.prototype = Object.create(DocumentWriter.prototype);
PDF.prototype.constructor = PDF;
PDF.prototype.kw = {
    o: "obj",
    eo: "endobj"
};

PDF.prototype._drawLine = function(line) {
    var res = line.stroke.r + " " + line.stroke.g + " " + line.stroke.b + " rg ";
    res += line.src.x + " " + line.src.y + " m " + line.dst.x + " " + line.dst.y + " l s\n";
    return res;
};

PDF.prototype._drawCircle = function(circle) {
    // Build geometry
    var c = 0.551915024494 * circle.radius;
    var p = circle.pos;
    var r = circle.radius;
    var P = [
        [p.x+c, p.y+r, p.x+r, p.y+c, p.x+r, p.y],
        [p.x+r, p.y-c, p.x+c, p.y-r, p.x, p.y-r],
        [p.x-c, p.y-r, p.x-r, p.y-c, p.x-r, p.y],
        [p.x-r, p.y+c, p.x-c, p.y+r, p.x, p.y+r]
    ];
    var geometry = [p.x, p.y+r].join(" ") + " m ";
    for (var i=0; i<P.length; i++) {
        geometry += P[i].join(" ") + " c ";
    }

    // Fill
    var res = "";
    if (circle.fill != null) {
        res += circle.fill.r + " " + circle.fill.g + " " + circle.fill.b + " rg ";
        res += geometry + "F\n";
    }

    // Stroke
    if (circle.stroke != null) {
        res += circle.stroke.r + " " + circle.stroke.g + " " + circle.stroke.b + " RG ";
        res += geometry + " " + circle.strokeWidth + " w S\n";
    }

    return res;
};

PDF.prototype.make = function() {
    var doc = "";
    var objects = [];

    function pad(num) {
        var s = "0000000000" + num;
        return s.substr(s.length-10);
    }

    function count() {
        objects.push(doc.length);
    }

    // Header
    doc = this._doc.header + "\n% Generated by " + this._doc.author + "\n\n";

    // Add catalog
    doc += "% Catalog\n";
    count();
    doc += "1 0 obj <</Type /Catalog /Pages 2 0 R>>\nendobj\n\n";

    // Add pages
    doc += "% Pages\n";
    count();
    doc += "2 0 obj <</Type /Pages /Kids [3 0 R] /Count 1>>\nendobj\n\n";

    // Add first (only) page
    doc += "% First (only) page\n";
    count();
    doc += "3 0 obj<</Type /Page /Parent 2 0 R /Resources null";
    doc += "/MediaBox [0 0 " + this.bbox.width + " " + this.bbox.height + "] /Contents 4 0 R>>\nendobj\n\n";

    // Primitives
    // Create stream
    var draw = "";
    this._doc.primitives.lines.forEach(function(l) {
        draw += PDF.prototype._drawLine(l);
    });
    this._doc.primitives.circles.forEach(function(c) {
        draw += PDF.prototype._drawCircle(c);
    });

    // Add stream
    doc += "% Primitives\n";
    count();
    doc += "4 0 obj\n";
    doc += "<</Length " + draw.length + ">>\n";
    doc += "stream\n";
    doc += draw + "\n";
    doc += "endstream\nendobj\n\n";

    // Add cross reference table
    count();
    doc += "xref\n0 " + objects.length + "\n";
    doc += "0000000000 65535 f\n";
    for (var i=0; i<objects.length-1; i++) {
        doc += pad(objects[i]) + " 00000 n\n";
    }

    // Add trailer
    doc += "trailer <</Size " + objects.length + "/Root 1 0 R>>\nstartxref\n" + objects[objects.length-1] + "\n";

    // Footer
    doc += this._doc.footer;
    return doc;
};